{
  "version": 3,
  "sources": ["../src/index.ts", "../src/math/index.ts", "../src/validation/index.ts"],
  "sourcesContent": ["export * from \"./math\";\nexport * from \"./validation\";\n", "function add(a: number, b: number) {\n  return a + b;\n}\nfunction subtract(a: number, b: number) {\n  return a - b;\n}\nfunction multiply(a: number, b: number) {\n  return a * b;\n}\nfunction divide(a: number, b: number) {\n  return a / b;\n}\n\n/**\n * \uC8FC\uC5B4\uC9C4 \uC22B\uC790\uB97C \uD55C\uAD6D \uC22B\uC790 \uC11C\uC2DD\uC5D0 \uC54C\uB9DE\uC740 \uBB38\uC790\uC5F4\uB85C \uBC14\uAFB8\uC5B4 \uBC18\uD658\n * @param value \uBCC0\uD658\uD560 \uC22B\uC790\n */\nfunction formatNumberToKorean(value: number): string {\n  return new Intl.NumberFormat(\"ko-KR\").format(value);\n}\n\n/**\n * \uD560\uC778 \uAE08\uC561\uC744 \uAD6C\uD558\uB294 \uC720\uD2F8 \uD568\uC218\n * @param value \uC6D0\uAC00\n * @param rate \uD560\uC778\uC728\n * @returns \uD560\uC778\uB41C \uAE08\uC561\n */\nfunction getDiscountedPrice(value: number, rate: number): number {\n  return value - value * (rate / 100);\n}\n\nexport {\n  add,\n  subtract,\n  multiply,\n  divide,\n  formatNumberToKorean,\n  getDiscountedPrice,\n};\n", "/**\n * 1\uCC28\uC6D0 \uBC30\uC5F4\uC774 \uC11C\uB85C \uAC19\uC740 \uAC12\uB4E4\uC744 \uAC00\uC9C0\uACE0 \uC788\uB294\uC9C0 \uD655\uC778\uD558\uB294 \uD568\uC218\n * @param a: array<T>\n * @param b: array<T>\n * @returns:boolean \uAC19\uC740 \uAC12\uC778\uC9C0\uC5D0 \uB300\uD55C \uC5EC\uBD80\n */\nfunction isEqualArray<T>(a: T[], b: T[]): boolean {\n  return (\n    a.length === b.length &&\n    a.every((item) => b.includes(item)) &&\n    b.every((item) => a.includes(item))\n  );\n}\n\n/**\n * array\uC5D0 data \uC5EC\uBD80\uC5D0 \uB530\uB77C \uCD94\uAC00\uD558\uAC70\uB098, \uC0AD\uC81C\uD558\uB294 \uB85C\uC9C1\n * @param array \uC6D0\uBCF8 \uBC30\uC5F4\n * @param data \uCD94\uAC00\uD560 \uAC12\n * @returns \uCD94\uAC00 \uBC0F \uC0AD\uC81C\uB41C \uACB0\uACFC\n */\nfunction addOrDeleteArray<T>(array: T[], data: T): T[] {\n  if (array.some((value) => value === data)) {\n    return array.filter((value) => value !== data);\n  } else {\n    return [...array, data];\n  }\n}\n\nexport { isEqualArray, addOrDeleteArray };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,SAAS,IAAI,GAAW,GAAW;AACjC,SAAO,IAAI;AACb;AACA,SAAS,SAAS,GAAW,GAAW;AACtC,SAAO,IAAI;AACb;AACA,SAAS,SAAS,GAAW,GAAW;AACtC,SAAO,IAAI;AACb;AACA,SAAS,OAAO,GAAW,GAAW;AACpC,SAAO,IAAI;AACb;AAMA,SAAS,qBAAqB,OAAuB;AACnD,SAAO,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,KAAK;AACpD;AAQA,SAAS,mBAAmB,OAAe,MAAsB;AAC/D,SAAO,QAAQ,SAAS,OAAO;AACjC;;;ACvBA,SAAS,aAAgB,GAAQ,GAAiB;AAChD,SACE,EAAE,WAAW,EAAE,UACf,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,IAAI,CAAC,KAClC,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,IAAI,CAAC;AAEtC;AAQA,SAAS,iBAAoB,OAAY,MAAc;AACrD,MAAI,MAAM,KAAK,CAAC,UAAU,UAAU,IAAI,GAAG;AACzC,WAAO,MAAM,OAAO,CAAC,UAAU,UAAU,IAAI;AAAA,EAC/C,OAAO;AACL,WAAO,CAAC,GAAG,OAAO,IAAI;AAAA,EACxB;AACF;",
  "names": []
}
